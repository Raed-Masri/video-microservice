{
	"info": {
		"_postman_id": "aadbc7cf-a476-4ed7-8c85-4b25d8a81838",
		"name": "video-ms",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29917370"
	},
	"item": [
		{
			"name": "Get Video",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3002/videos?title=video &sortByRating=asc",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"videos"
					],
					"query": [
						{
							"key": "title",
							"value": "video "
						},
						{
							"key": "sortByRating",
							"value": "asc"
						}
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Create Video",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJhZWRAZ21haWwuY29tIiwiaWF0IjoxNzE1MTk1Njc2fQ.8w4PLbK27sYDp2zFUrmmGs0reNnPHZQ5hFTWGYrstzA"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\": \"video 2\",\n    \"description\":\"this is the fourth video\",\n    \"duration\":\"50:23\",\n    \"ageRestriction\":\"20\",\n    \"averageRating\":0,\n    \"rating\":0,\n    \"videoUrl\":\"http://www.google.com\",\n    \"comments\":[]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3002/videos/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"videos",
						"create"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Update Comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJhZWRAZ21haWwuY29tIiwiaWF0IjoxNzE1MTU3NzA5fQ.NisAT0bkfL3_MWtbQNbowlZBWhrnkhJffh5kLHLWJ_g"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"comment\": \"updated auth comment\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3002/videos/:id/:commentId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"videos",
						":id",
						":commentId"
					],
					"variable": [
						{
							"key": "id",
							"value": "6638f97f2fd1ce6696e0d59c"
						},
						{
							"key": "commentId",
							"value": "663919a657a8103c12b96da6"
						}
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Play Video",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJhZWRAZ21haWwuY29tIiwiaWF0IjoxNzE1MTU3NzA5fQ.NisAT0bkfL3_MWtbQNbowlZBWhrnkhJffh5kLHLWJ_g"
					}
				],
				"url": {
					"raw": "http://localhost:3002/videos/play?id=6638f97f2fd1ce6696e0d59c&userAge=21",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"videos",
						"play"
					],
					"query": [
						{
							"key": "id",
							"value": "6638f97f2fd1ce6696e0d59c"
						},
						{
							"key": "userAge",
							"value": "21"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Comment",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJhZWRAZ21haWwuY29tIiwiaWF0IjoxNzE1MjcyNjcyfQ.d11mEuUIvIKI0_3UbCbwL-WLjp17pCj07MZPHZ-HqPQ"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"comment\":\"new comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3002/videos/comments/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"videos",
						"comments",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "6638f97f2fd1ce6696e0d59c"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Rating",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJhZWRAZ21haWwuY29tIiwiaWF0IjoxNzE1MTYyNjMxfQ.sijwg9BlPmEzFrySLZI2BNXFG-EaQMAkiURvLkIBfaQ"
					},
					{
						"key": "",
						"value": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"rating\":5,\r\n    \"userId\":\"tryhtxvgdsuc6ds8\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3002/videos/rating/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"videos",
						"rating",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "6638f97f2fd1ce6696e0d59c"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Reply to comment",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJhZWRAZ21haWwuY29tIiwiaWF0IjoxNzE1MjcyNjcyfQ.d11mEuUIvIKI0_3UbCbwL-WLjp17pCj07MZPHZ-HqPQ"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reply\":\"this is a new reply\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3002/videos/:id/comments/:commentId/reply",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"videos",
						":id",
						"comments",
						":commentId",
						"reply"
					],
					"variable": [
						{
							"key": "id",
							"value": "6638f97f2fd1ce6696e0d59c"
						},
						{
							"key": "commentId",
							"value": "66391b6288a5b15f70b17522"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Comment",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJhZWRAZ21haWwuY29tIiwiaWF0IjoxNzE1MTA4ODYxfQ.2HKm8ocNptsdRBXD95NBP6ddTw-1wBMlwBUJnlX46Sw"
					}
				],
				"url": {
					"raw": "http://localhost:3002/videos/comments/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"videos",
						"comments",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "6638f97f2fd1ce6696e0d59c"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}